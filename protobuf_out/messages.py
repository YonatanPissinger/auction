# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: messages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


@dataclass
class NewUserData(betterproto.Message):
    user_name: str = betterproto.string_field(1)
    user_password: str = betterproto.string_field(2)
    user_phone_number: str = betterproto.string_field(3)
    user_status: str = betterproto.string_field(4)


@dataclass
class OldUserData(betterproto.Message):
    user_name: str = betterproto.string_field(1)
    user_password: str = betterproto.string_field(2)


@dataclass
class CustomerProductData(betterproto.Message):
    user_name: str = betterproto.string_field(1)
    user_phone_number: str = betterproto.string_field(2)
    customer_product_type: str = betterproto.string_field(3)
    customer_note: str = betterproto.string_field(4)


@dataclass
class SellerProductData(betterproto.Message):
    seller_product_type: str = betterproto.string_field(1)


@dataclass
class PreviousProductsRequest(betterproto.Message):
    previous_products_user_name_request: str = betterproto.string_field(1)


@dataclass
class MessageToServer(betterproto.Message):
    new_user_data: "NewUserData" = betterproto.message_field(
        1, group="StructMessageToServer"
    )
    old_user_data: "OldUserData" = betterproto.message_field(
        2, group="StructMessageToServer"
    )
    customer_product_data: "CustomerProductData" = betterproto.message_field(
        3, group="StructMessageToServer"
    )
    seller_product_data: "SellerProductData" = betterproto.message_field(
        4, group="StructMessageToServer"
    )
    previous_products: "PreviousProductsRequest" = betterproto.message_field(
        5, group="StructMessageToServer"
    )


@dataclass
class ServerSuccess(betterproto.Message):
    success_message: str = betterproto.string_field(1)


@dataclass
class ServerError(betterproto.Message):
    error_message: str = betterproto.string_field(1)


@dataclass
class SignUpProblem(betterproto.Message):
    user_name_exist: bool = betterproto.bool_field(1)


@dataclass
class SignInProblem(betterproto.Message):
    user_name_or_password_incorrect: bool = betterproto.bool_field(1)


@dataclass
class MatchWasNotFound(betterproto.Message):
    match_not_found: bool = betterproto.bool_field(1)


@dataclass
class ListCurrentCustomerProducts(betterproto.Message):
    relevant_current_customer_products: List[
        "CustomerProductData"
    ] = betterproto.message_field(1)


@dataclass
class ListMatchProducts(betterproto.Message):
    relevant_match_products: List["CustomerProductData"] = betterproto.message_field(1)


@dataclass
class MessageToUser(betterproto.Message):
    server_success: "ServerSuccess" = betterproto.message_field(
        1, group="StructMessageToUser"
    )
    server_error: "ServerError" = betterproto.message_field(
        2, group="StructMessageToUser"
    )
    full_user_data: "NewUserData" = betterproto.message_field(
        3, group="StructMessageToUser"
    )
    user_is_exist: "SignUpProblem" = betterproto.message_field(
        4, group="StructMessageToUser"
    )
    incorrect_user_details: "SignInProblem" = betterproto.message_field(
        5, group="StructMessageToUser"
    )
    there_is_not_match_product: "MatchWasNotFound" = betterproto.message_field(
        6, group="StructMessageToUser"
    )
    current_customer_products: "ListCurrentCustomerProducts" = (
        betterproto.message_field(7, group="StructMessageToUser")
    )
    match_products: "ListMatchProducts" = betterproto.message_field(
        8, group="StructMessageToUser"
    )
